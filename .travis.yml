env:
  global:
    - VERSION=1.${TRAVIS_BUILD_NUMBER}
    - DOCKER_HUB_USER=vfarcic

sudo: required

services:
  - docker

before_install:
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then openssl aes-256-cbc -K $encrypted_fdd0765d255b_key -iv $encrypted_fdd0765d255b_iv -in proxy-key.enc -out proxy-key -d; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then chmod 600 proxy-key; fi'

script:
  - set -e
  - docker run --rm -v $PWD:/usr/src/myapp -w /usr/src/myapp -v go:/go golang:1.6 bash -c "go get -d -v -t && go test --cover ./... --run UnitTest && go build -v -o docker-flow-proxy"
  - docker build -t vfarcic/docker-flow-proxy .
  - docker-compose -f docker-compose-test.yml up -d staging-dep
  - docker-compose -f docker-compose-test.yml run --rm staging
  - docker-compose -f docker-compose-test.yml down
  - docker tag vfarcic/docker-flow-proxy vfarcic/docker-flow-proxy:beta
  - docker login -e $DOCKER_EMAIL -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  - docker push vfarcic/docker-flow-proxy:beta
  - HOST_IP=$(ifconfig eth0 | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1') docker-compose -f docker-compose-test.yml run --rm staging-swarm

after_success:
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker tag vfarcic/docker-flow-proxy vfarcic/docker-flow-proxy:${VERSION}; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker push vfarcic/docker-flow-proxy:${VERSION}; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker push vfarcic/docker-flow-proxy; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ssh -o "StrictHostKeyChecking no" -i proxy-key root@${SWARM_MANAGER_1_PUBLIC_IP} docker service update --image vfarcic/docker-flow-proxy:${VERSION} proxy_proxy; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker-compose -f docker-compose-test.yml run --rm docs; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker build -t vfarcic/docker-flow-proxy-docs -f Dockerfile.docs .; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker tag vfarcic/docker-flow-proxy-docs vfarcic/docker-flow-proxy-docs:${VERSION}; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker push vfarcic/docker-flow-proxy-docs:${VERSION}; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then docker push vfarcic/docker-flow-proxy-docs; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ssh -o "StrictHostKeyChecking no" -i proxy-key root@${SWARM_MANAGER_1_PUBLIC_IP} docker service update --image vfarcic/docker-flow-proxy-docs:${VERSION} proxy_docs; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ssh -o "StrictHostKeyChecking no" -i proxy-key root@${SWARM_MANAGER_1_PUBLIC_IP} docker service scale proxy_lets-encrypt=0; fi'
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then ssh -o "StrictHostKeyChecking no" -i proxy-key root@${SWARM_MANAGER_1_PUBLIC_IP} docker service scale proxy_lets-encrypt=1; fi'

branches:
  only:
    - master

notifications:
  slack:
    secure: h5AN2Q3Ft3LYkBZWsEtQIVTZBmZYc/yGcqBcO7zCts2I4eTYCNPl419nkQiMbPBCL6s7mQv2bY2hA9mhm271ssc3JgoQ8A7yMoR+tlGWrdDwR7vhvs85o+GUiVM27sqCCNNz/pE/HU6F5h5h4vQAEBZzC1WGJkdxKQGNohDh+xWJMxB+SFynC5qtbVjXYiKwGf9EvAa7qWbJ7OgzqvU5QAdpUMa0CptEkNsGxgTF7onvx/6TYJTnDTmmiGlwkeo83895qbROxxUE6Az0lRa/4P8sAKpa4Gc+nxInk41KpZud5XW85lrs6Ncesh2TzIlac/RboE68zhP+MJgobzjDyDZdSnm3tRH8k5vK+2FvaqOtWEFink0H42n96rcuGKVeGe56TJRoHMou5H1qWwc8caIJm4yLRR4kwed+Ao73iQLnSfQeTCEk/WUUm7a4JaChR55EXnRfI5gcd54C+ONCT6JnvCGRhRnPClFiGgQ274D4QUCgm5nLm1+XVReTUo/us9L1fraAQtc/UMTbAsD+1MFddSYRmE8pMh0FZfYWqf8UPlVvmTjtSOPK8g+WoCdi4qqhnBJapmNuSMRrhf7EYxzvFbFG5EBKdSDCgNffYtOMQSwWY09IaufyJFQYjVlCuT+tYi1unzlOJmFWps+qxl/CcoB6guM+YNj0vqFbApw=